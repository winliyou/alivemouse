name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install Dependencies for Ubuntu
      if: runner.os == 'Linux'
      run: sudo apt install -y libgtk-3*-dev libsoup2*-dev libjavascriptcoregtk-*-dev libwebkit2gtk-4*-dev libxdo-dev libappindicator3-dev

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm update

    - name: Build Tauri App
      run: pnpm tauri build

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Install files on Windows
      if: runner.os == 'Windows'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $files = Get-ChildItem -Path ./src-tauri/target/release/bundle/nsis -Filter *.exe -Recurse | ForEach-Object { $_.FullName }
        foreach ($file in $files) {
            echo "Uploading $file"
            gh release upload ${{ github.ref_name }} "$file" --clobber
        }
            
    - name: Upload Deb files on Ubuntu
      if: runner.os == 'Ubuntu'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in ./src-tauri/target/release/bundle/deb/*.deb; do
            echo "Uploading $file"
            gh release upload ${{ github.ref_name }} "$file" --clobber
        done
      
    - name: Upload dmg files on macOS
      if: runner.os == 'macOS'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in ./src-tauri/target/release/bundle/dmg/*.dmg; do
            echo "Uploading $file"
            gh release upload ${{ github.ref_name }} "$file" --clobber
        done
      